tty: true

driver:
  kind: "ebpf"

collectors:
  crio:
    enabled: true
  docker:
    enabled: false
  containerd:
    enabled: true
  kubernetes:
    enabled: false

services:
  - name: "k8saudit-webhook"
    type: "NodePort"
    ports:
      - port: 9765
        nodePort: 30007
        protocol: "TCP"

falcoctl:
  artifact:
    install:
      enabled: true
    follow:
      enabled: true
  config:
    artifact:
      install:
        refs:
          - "falco-rules:3"
          - "k8saudit-rules:0.7"
      follow:
        refs:
          - "falco-rules:3"
          - "k8saudit-rules:0.7"

falco:
  log_syslog: false
  json_output: true
  grpc:
    enabled: true
    threadiness: 8
    bind_address: "unix:///run/falco/falco.sock"
  grpc_output:
    enabled: true
  syslog_output:
    enabled: false
  rules_file:
    - "/etc/falco/rules.d"
    - "/etc/falco/falco_rules.yaml"
    - "/etc/falco/k8s_audit_rules.yaml"
  plugins:
    - name: "k8saudit"
      library_path: "libk8saudit.so"
      open_params: "http://:9765/k8s-audit"
      init_config: ""
    - name: "json"
      library_path: "libjson.so"
      init_config: ""
  load_plugins:
    - "k8saudit"
    - "json"
  metrics:
    enabled: true
    interval: "15m"
    output_rule: true
    libbpf_stats_enabled: true
    convert_memory_to_mb: true
    include_empty_values: true
    state_counters_enabled: true
    resource_utilization_enabled: true
    kernel_event_counters_enabled: true

resources:
  requests:
    cpu: "200m"
    memory: "192Mi"
  limits:
    cpu: "200m"
    memory: "512Mi"

podAnnotations:
  promtail.io/collect: "true"

nodeSelector:
  kubernetes.io/os: "linux"

tolerations:
  - operator: "Exists"
